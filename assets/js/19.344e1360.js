(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{416:function(a,s,t){"use strict";t.r(s);var n=t(56),e=Object(n.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"排序和分页"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#排序和分页"}},[a._v("#")]),a._v(" 排序和分页")]),a._v(" "),t("h2",{attrs:{id:"_1、排序-order-by"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、排序-order-by"}},[a._v("#")]),a._v(" 1、排序：ORDER BY")]),a._v(" "),t("p",[a._v("排序规则：   使用 ORDER BY 子句排序     ASC（ascend）: 升序     DESC（descend）:降序")]),a._v(" "),t("p",[a._v("ORDER BY 子句在SELECT语句的结尾。")]),a._v(" "),t("p",[a._v("单列排序")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("#"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3.")]),a._v(" 强调格式：WHERE 需要声明在FROM后，ORDER BY之前。\n#第二步\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("SELECT")]),a._v(" employee_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("salary\n#第一步\nFROM employees\nWHERE department_id IN "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("50")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("60")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("70")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n#第三步\nORDER BY department_id DESC"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br")])]),t("p",[a._v("多列排序")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("#练习：显示员工信息，按照department_id的降序排列，salary的升序排列\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("SELECT")]),a._v(" employee_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("salary"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("department_id\nFROM employees\nORDER BY department_id DESC"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("salary ASC"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("p",[a._v("可以使用不在SELECT列表中的列排序。")]),a._v(" "),t("p",[a._v("在对多列进行排序的时候，首先排序的第一列必须有相同的列值，才会对第二列进行排序。如果第一列数据中所有值都是唯一的，将不再对第二列进行排序。")]),a._v(" "),t("h2",{attrs:{id:"_2、分页-limit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、分页-limit"}},[a._v("#")]),a._v(" 2、分页：LIMIT")]),a._v(" "),t("p",[a._v("实现规则     分页原理：     所谓分页显示，就是将数据库中的结果集，一段一段显示出来需要的条件。")]),a._v(" "),t("p",[a._v("MySQL中使用 LIMIT 实现分页")]),a._v(" "),t("p",[a._v("格式：")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("LIMIT 位置偏移量"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" 行数\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("第一个“位置偏移量”参数指示MysQL从哪一行开始显示，是一个可选参数，如果不指定“位置偏移量”，将会从表中的第一条记录开始（第一条记录的位置偏移量是0，第二条记录的位置偏移量是1，以此类推)；第二个参数“行数”指示返回的记录条数。")]),a._v(" "),t("p",[a._v("MySQL 8.0中可以使用“LIMIT 3 OFFSET 4”，意思是获取从第5条记录开始后面的3条记录，和“LIMIT4,3;”返回的结果相同。")]),a._v(" "),t("p",[a._v("分页显式公式：（当前页数-1）*每页条数，每页条数")]),a._v(" "),t("p",[a._v("注意：LIMIT 子句必须放在整个SELECT语句的最后！")]),a._v(" "),t("p",[a._v("使用 LIMIT 的好处：     约束返回结果的数量可以减少数据表的网络传输量 ，也可以 提升查询效率 。如果我们知道返回结果只有1 条，就可以使用 LIMIT 1 ，告诉 SELECT 语句只需要返回一条记录即可。这样的好处就是 SELECT 不需要扫描完整的表，只需要检索到一条符合条件的记录即可返回。")])])}),[],!1,null,null,null);s.default=e.exports}}]);